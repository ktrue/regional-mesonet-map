<?php
############################################################################
#
# This is the Slovak language plugin file for the [network]-mesomap.php (Multilingual version)
# It needs to be in the same directory as the [network]-mesomap.php program itself.
# This definition file is equivalent to the Nordic-mesomap definition files except the names have been prefixed
# with 'RMNET_' on all definitions, and some definitions are not used in the non-Nordic versions.
# Ken True
# Version 1.00 - 24-Feb-2009 initial release
# Version 1.01 - 22-Jul-2009 added character set support
# Version 1.02 - 01-Oct-2012 added support for $printList to suppress List display 
# Version 3.00 - 24-Jul-2016 repurposed for mesonet-map.php with editing
# Version 3.03 - 31-Jul-2016 - added CBI display support 
# Version 4.03 - 29-May-2018 - removed preg_replace e modifier for timezone processing

define('RMNET_CHARSET','ISO-8859-2');
define('RMNET_LANGVERSION', 'SVKWN-language-meso-en.txt - Version 4.03 - 29-May-2018');
// Main
define('RMNET_COLSORT', 'Note: Click on the table column title to change the order of that column\'s vaues.');
// Tables and title= tags
define('RMNET_CURRHEAD', 'Current weather conditions obtained from the member stations of the Slovakia Weather Network');
// TABLEHEADER
define('RMNET_FEAT', 'Funkcie<br/>Stanice');
define('RMNET_STATE', 'RegiÛn');
define('RMNET_STATION','Stanica');
define('RMNET_CURHEAD', 'Aktu·lne<br />poËasie');
define('RMNET_CONDL','Aktu·lne poËasie');
define('RMNET_TEMP', 'Tepl.');
define('RMNET_TEMPL', 'Teplota');
define('RMNET_DEWPT', 'Rosn˝ bod');
define('RMNET_DEWPTABBREV','RB');
define('RMNET_HUM', 'Vlhk.');
define('RMNET_HUML', 'Vlhkos'.chr(187));
define('RMNET_AVGWIND', 'Vietor');
define('RMNET_GUSTWIND', 'N·raz');
define('RMNET_GUSTABBREV', 'n·r.');
define('RMNET_WINDL', 'Smer vetra a r˝chlosù/N·raz');
define('RMNET_WIND', 'Vietor');
define('RMNET_WINDFROM', 'Vietor z');
define('RMNET_PRECIPS', 'Zr·æky');
define('RMNET_PRECIPSL', 'Zr·æky dnes');
define('RMNET_BAROB', 'Tlak');
define('RMNET_BAROT', 'Tendencia');
define('RMNET_BAROL', 'Tlak a Tendencia');
define('RMNET_SNOB', 'Sneh');
define('RMNET_TXTGUST', 'N·raz');
define('RMNET_DATAUPDT', 'Posl.<br />Aktual.');
define('RMNET_NOCOND', 'No current conditions report');
define('RMNET_TOWN',"N·zov lokality");
define('RMNET_CBI', 'Fire<br/>Danger');
define('RMNET_CBILEGEND','Fire Danger [Chandler Burning Index]');
define('RMNET_CBI_EXTREME','Extreme');
define('RMNET_CBI_VERYHIGH','Very High');
define('RMNET_CBI_HIGH','High');
define('RMNET_CBI_MODERATE','Moderate');
define('RMNET_CBI_LOW','Low');

define('RMNET_OFFLINE',"Offline"); // text to display on mesomap when station data is stale/not available
// for javascript animation control button lables
define('RMNET_RUN', 'Spusti');
define('RMNET_PAUSE', 'Zastavi');
define('RMNET_STEP', 'Krok');

define('RMNET_CONDSFROM', 'ZobrazenÈ ˙dajÈ boli zhromaædenÈ <br/>od');
// date-time appears
define('RMNET_CONDSTO', 'do');

// the following functions are used to translate various things ..
// replace the '...' after the => in each of the arrays below for local language
// do not change the '..' before the => .. it is the key used for the lookups
// Wind direction abbreviations
function RMNET_lang_winddir($rawd) {
$txtdir =  array(
  'N' => 'S',
  'NNE' => 'SSV',
  'NE' => 'SV',
  'ENE' => 'VSV',
  'E' => 'V',
  'ESE' => 'VJV',
  'SE' => 'JV',
  'SSE' => 'JJV',
  'S' => 'J',
  'SSW' => 'JJZ',
  'SW' => 'JZ',
  'WSW' => 'ZJZ',
  'W' => 'Z',
  'WNW' => 'ZSZ',
  'NW' => 'SZ',
  'NNW' => 'SSZ',
);
if(isset($txtdir[$rawd])) {
  $txtdire = $txtdir[$rawd];
 } else {
  $txtdire = $rawd;
}
return $txtdire;
}
// Barometer trend abbreviations
function RMNET_lang_barotrend($rawe) {
$txtbarot =  array(  
'Falling' => 'Kles·',
'Rising' => 'St˙pa',
'Falling Rapidly' => 'Prudko kles·',
'Rising Rapidly' => 'Prudko st˙pa',
'Falling Slowly' => 'Mierne kles·',
'Rising Slowly' => 'Mierne st˙pa',
'Steady' => 'Ust·len˝'
);
if(isset($txtbarot[$rawe])) {
  $txtbart = $txtbarot[$rawe];
 } else {
  $txtbart = $rawe;
 }
return $txtbart;
}
function RMNET_lang_stationfeatures($rawg) {
$txtfeat =  array(  
'Weather, Lightning, WebCam' => 'PoËasie, Webov· kamera, Blesk',
'Weather, WebCam, Lightning' => 'PoËasie, Webov· kamera, Blesk',
'Weather, WebCam' => 'PoËasie, Webov· kamera',
'Weather, Lightning' => 'PoËasie, Blesk',
'Weather' => 'PoËasie'
);
$rawg = preg_replace('|\s+|s','',$rawg);
$rawg = preg_replace('|,|s',', ',$rawg);
if(isset($txtfeat[$rawg])) {
  $txtfeatu = $txtfeat[$rawg];
 } else {
  $txtfeatu = $rawg;
 }
return $txtfeatu;
}
// Condition names (based on standard WD icon names)
function RMNET_lang_WXconds($rawh) {
$txticon =  array( 
'Sunny' =>  'SlneËno',
'Clear' =>  'Jasno',
'Cloudy' =>  'OblaËno',
'Cloudy2' =>  'Takmer zamraËenÈ',
'Partly Cloudy' =>  'PolooblaËno',
'Dry' =>  'Bez  zr·æok',
'Fog' =>  'Hmla',
'Haze' =>  'Opar',
'Heavy Rain' =>  'Siln˝ d·æÔ',
'Mainly Fine' =>  'Mal· oblaËnosù',
'Mist' => 'Dymno',
'Fog' => 'Hmla',
'Heavy Rain' => 'Siln˝ d·æÔ',
'Overcast' => 'ZamraËenÈ',
'Rain' => 'D·æÔ',
'Showers' => 'Preh·nky',
'Snow' => 'Sneæenie',
'Thunder' => 'B˙rka',
'Overcast' => 'ZamraËenÈ',
'Partly Cloudy' => 'PolooblaËno',
'Rain' => 'D·æÔ',
'Rain2' => 'D·æÔ',
'Showers2' => 'Preh·nky',
'Sleet' => 'Zmieö.zr·æky',
'Sleet Showers' => 'Preh·nky daæÔa so snehom',
'Snow' => 'Sneæenie',
'Snow Melt' => 'Topiaci sa sneh',
'Snow Showers2' => 'SnehovÈ preh·nky',
'Sunny' => 'SlneËno',
'Thunder Showers' => 'Thunder Showers',
'Thunder Showers2' => 'Thunder Showers2',
'Thunder Storms' => 'Thunder Storms',
'Tornado' => 'Tornado',
'Windy' => 'Veterno',
'Stopped Raining' => 'Po daædi',
'Mostly Cloudy' => 'Veæk· oblaËnosù',
'Few Clouds' => 'Mal· oblaËnosù',
'light Rain' => 'Slab˝ d·æÔ',
'light Rain +Mist' => 'Slab˝ d·æÔ, Dymno',
'Wind/Rain' => 'Veterno/D·æÔ'
);
if(isset($txticon[$rawh]) ) {
  $txticons = $txticon[$rawh];
 } else {
  $txticons = $rawh;
}
return $txticons;
}
// lookup for Region names (optional)
function RMNET_lang_region($rawr) {
$txtregions = array(
// put 'english region name' => 'translated region name',   here
  'Bratyslawski' =>  'Bratislavsk&#253; kraj',
  'Trnawski' =>  'Trnavsk&#253; kraj',
  'Nitriansky' =>  'Nitriansk&#253; kraj',
  'Trenczynski' =>   'Trenciansk&#253; kraj',
  'Banskobystrzycki' =>  'Banskobystrick&#253; kraj',
  'Zylinski' =>  '&#381;ilinsk&#253; kraj',
  'Koszycki' =>  'Ko&#353;ick&#253; kraj',
  'Preszowski' =>  'Pre&#353;ovsk&#253; kraj',

);
if(isset($txtregions[$rawr])) {
  $tregion = $txtregions[$rawr];
 } else { 
  $tregion = $rawr;
}
return $tregion;
}
// lookup for Timezone names (optional)
function RMNET_lang_fixTZname ($timestring) {
	$tstr = $timestring;
	$tSF = strftime("%Z",time()); // might be long-form name
	$tRE = date('T',time()); // normal 3 or 4 character abbreviation
	
	if($tSF !== $tRE) { // fix long form to short form if needed
		$tstr = str_replace($tSF,$tRE,$tstr);
	}
	
	$timeZoneAbbrev = array(
	 // Put entries here like 'EST' => 'whatever', ...
	 'EET' => 'EET',
	 'EEST' => 'EEST',
	 );
	
	if (isset($timeZoneAbbrev[$tRE]) ) {
		$temp = str_replace($tRE,$timeZoneAbbrev[$tRE],$tstr);
		if($temp <> '') { $tstr = $temp; }
	}
	return $tstr;

}
// ---------------------end of language-meso-sk.txt-------------------------------
?>