<?php
############################################################################
#
# This is the Serbian language plugin file for the [network]-mesomap.php (Multilingual version)
# It needs to be in the same directory as the [network]-mesomap.php program itself.
# This definition file is equivalent to the Nordic-mesomap definition files except the names have been prefixed
# with 'RMNET_' on all definitions, and some definitions are not used in the non-Nordic versions.
# Ken True
# Version 1.00 - 24-Feb-2009 initial release
# Version 1.01 - 22-Jul-2009 added character set support 
# Version 3.00 - 24-Jul-2016 repurposed for mesonet-map.php with editing
# Version 3.03 - 31-Jul-2016 - added CBI display support 
# Version 4.03 - 29-May-2018 - removed preg_replace e modifier for timezone processing

define('RMNET_CHARSET','ISO-8859-2');
define('RMNET_LANGVERSION', 'mesonet-map-lang-sr.txt - Version 4.03 - 29-May-2018');
// Main
define('RMNET_COLSORT', 'Pa쬹ja: Klikom na naziv kolone menjate redosled vrednosti (sortiranje u oba smera)');
// Tables and title= tags
define('RMNET_CURRHEAD', 'Aktualni vremenski podaci osmotreni na stanicama 舶anicama Srpske Vremenske Mre쬰');
// TABLEHEADER
define('RMNET_FEAT', 'Stanica<br/>Osobine/Nadm. vis.');
define('RMNET_STATE', 'Oblast');
define('RMNET_STATION','Stanica');
define('RMNET_CURHEAD', 'Trenutno<br />Vreme');
define('RMNET_CONDL','Trenutno Vreme');
define('RMNET_TEMP', 'Temp.');
define('RMNET_TEMPL', 'Temperatura');
define('RMNET_DEWPT', 'Ta膊a Rose');
define('RMNET_DEWPTABBREV','TR');
define('RMNET_HUM', 'Vla쬹ost');
define('RMNET_HUML', 'Vla쬹ost');
define('RMNET_AVGWIND', 'Vetar');
define('RMNET_GUSTWIND', 'Udar');
define('RMNET_GUSTABBREV', 'Udar');
define('RMNET_WINDL', 'Smer vetra i Brzina/Udar');
define('RMNET_WIND', 'Vetar');
define('RMNET_WINDFROM', 'Pravac');
define('RMNET_PRECIPS', 'Padavine');
define('RMNET_PRECIPSL', 'Padavine danas');
define('RMNET_BAROB', 'Pritisak');
define('RMNET_BAROT', 'Trend');
define('RMNET_BAROL', 'Pritisak i Trend');
define('RMNET_SNOB', 'Sneg');
define('RMNET_TXTGUST', 'Udar');
define('RMNET_DATAUPDT', 'Posl.<br />a쬿r.');
define('RMNET_NOCOND', 'Trenutno nema vremeskog izve졊aja');
define('RMNET_TOWN',"Ime mesta");
define('RMNET_CBI', 'Fire<br/>Danger');
define('RMNET_CBILEGEND','Fire Danger [Chandler Burning Index]');
define('RMNET_CBI_EXTREME','Extreme');
define('RMNET_CBI_VERYHIGH','Very High');
define('RMNET_CBI_HIGH','High');
define('RMNET_CBI_MODERATE','Moderate');
define('RMNET_CBI_LOW','Low');

define('RMNET_OFFLINE',"Isklju泊no"); // text to display on mesomap when station data is stale/not available
// for javascript animation control button lables
define('RMNET_RUN', 'Pokreni');
define('RMNET_PAUSE', 'Zaustavi');
define('RMNET_STEP', 'Korak');

define('RMNET_CONDSFROM', 'Podaci su a쬿rirani<br/>');
// date-time appears
define('RMNET_CONDSTO', 'za');

// the following functions are used to translate various things ..
// replace the '...' after the => in each of the arrays below for local language
// do not change the '..' before the => .. it is the key used for the lookups
// Wind direction abbreviations
function RMNET_lang_winddir($rawd) {
$txtdir =  array(
'N' => 'S',
'NNE' => 'SSI',
'NE' => 'SI',
'ENE' => 'ISI',
'E' => 'I',
'ESE' => 'IJI',
'SE' => 'JI',
'SSE' => 'JJI',
'S' => 'J',
'SSW' => 'JJZ',
'SW' => 'JZ',
'WSW' => 'ZJZ',
'W' => 'Z',
'WNW' => 'ZSZ',
'NW' => 'SZ',
'NNW' => 'SSZ',
);
if(isset($txtdir[$rawd])) {
  $txtdire = $txtdir[$rawd];
 } else {
  $txtdire = $rawd;
}
return $txtdire;
}
// Barometer trend abbreviations
function RMNET_lang_barotrend($rawe) {
$txtbarot =  array(  
'Rising' => 'Raste',
'Falling' => 'Opada',
'Rising Rapidly' => 'Neglo raste',
'Falling Rapidly' => 'Naglo opada',
'Rising Slowly' => 'Polako raste',
'Falling Slowly' => 'Polako opada',
'Steady' => 'Bez promene'
);
if(isset($txtbarot[$rawe])) {
  $txtbart = $txtbarot[$rawe];
 } else {
  $txtbart = $rawe;
 }
return $txtbart;
}
function RMNET_lang_stationfeatures($rawg) {
$txtfeat =  array(  
'Weather, Lightning, WebCam' => 'Vreme, Web kamera, Detek. grmlj.',
'Weather, WebCam, Lightning' => 'Vreme, Web kamera, Detek. grmlj.',
'Weather, WebCam' => 'Vreme, Web kamera',
'Weather, Lightning' => 'Vreme, Detek. grmlj.',
'Weather' => 'Vreme'
);
$rawg = preg_replace('|\s+|s','',$rawg);
$rawg = preg_replace('|,|s',', ',$rawg);
if(isset($txtfeat[$rawg])) {
  $txtfeatu = $txtfeat[$rawg];
 } else {
  $txtfeatu = $rawg;
 }
return $txtfeatu;
}
// Condition names (based on standard WD icon names)
function RMNET_lang_WXconds($rawh) {
$txticon =  array( 
'Sunny' =>  'Sun搏no',
'Clear' =>  'Vedro',
'Cloudy' =>  'Obla迫o',
'Cloudy2' =>  'Obla迫o2',
'Partly Cloudy' =>  'Delimi迫o obla迫o',
'Dry' =>  'Suvo',
'Fog' =>  'Magla',
'Haze' =>  'Sumaglica',
'Heavy Rain' =>  'Jaka ki져',
'Mainly Fine' =>  'Delimi迫o obla迫o',
'Mist' => 'Sumaglica',
'Fog' => 'Magla',
'Heavy Rain' => 'Jaka ki져',
'Overcast' => 'Obla迫o',
'Rain' => 'Ki져',
'Showers' => 'Padavine',
'Snow' => 'Sneg',
'Thunder' => 'Grmljavina',
'Overcast' => 'Obla迫o',
'Partly Cloudy' => 'Delimi迫o obla迫o',
'Rain' => 'Ki져',
'Rain2' => 'Ki져2',
'Showers2' => 'Padavine2',
'Sleet' => 'Susne쬴ca',
'Sleet Showers' => 'Susne쬴ca',
'Snow' => 'Sneg',
'Snow Melt' => 'Topljenje snega',
'Snow Showers2' => 'Sneg2',
'Sunny' => 'Sunny',
'Thunder Showers' => 'Grmljavina sa ki졆m',
'Thunder Showers2' => 'Grmljavina sa ki졆m2',
'Thunder Storms' => 'Oluja sa grmljavinom',
'Tornado' => 'Tornado',
'Windy' => 'Vetrovito',
'Stopped Raining' => 'Prestanak ki젼',
'Wind/Rain' => 'Vetar/Ki져'
);
if(isset($txticon[$rawh]) ) {
  $txticons = $txticon[$rawh];
 } else {
  $txticons = $rawh;
}
return $txticons;
}
// lookup for Region names (optional)
function RMNET_lang_region($rawr) {
$txtregions = array(
// put 'english region name' => 'translated region name',   here
'Serbia' => 'Srbija',
'Kosovo' => 'Kosovo',
'Macedonia' => 'Macedonia',
);
if(isset($txtregions[$rawr])) {
  $tregion = $txtregions[$rawr];
 } else { 
  $tregion = $rawr;
}
return $tregion;
}
// lookup for Timezone names (optional)
function RMNET_lang_fixTZname ($timestring) {
	$tstr = $timestring;
	$tSF = strftime("%Z",time()); // might be long-form name
	$tRE = date('T',time()); // normal 3 or 4 character abbreviation
	
	if($tSF !== $tRE) { // fix long form to short form if needed
		$tstr = str_replace($tSF,$tRE,$tstr);
	}
	
	$timeZoneAbbrev = array(
	 // Put entries here like 'EST' => 'whatever', ...
	 'EET' => 'EET',
	 'EEST' => 'EEST',
	 );
	
	if (isset($timeZoneAbbrev[$tRE]) ) {
		$temp = str_replace($tRE,$timeZoneAbbrev[$tRE],$tstr);
		if($temp <> '') { $tstr = $temp; }
	}
	return $tstr;

}
// ---------------------end of mesonet-map-lang-sr.txt-------------------------------
?>